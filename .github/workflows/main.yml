# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Supply chain project CICD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        python -m pip install --upgrade pip
        pip install python-jose
        python -m pip install --upgrade pip
        pip install "passlib[bcrypt]"
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Test with pytest
    #   run: |
    #     pytest

  build-push-container:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to DockerHub
      uses: docker/login-action@v3 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest

  deploy:
    needs: build-push-container
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME  }}
          username: ${{ secrets.USER_NAME  }}
          key: ${{ secrets.AWS_PRIVATE_KEY  }}
          port: 22
          script: |
            sudo docker rm -f fastapi
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest
            sleep 10 
            sudo docker run -d -p 9000:80 --name fastapi ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-app:latest
            sudo docker ps 
            sleep 10 
            curl localhost:9000
            curl -X 'POST' 'http://localhost:9000/token' -H 'accept: application/json' -H 'Content-Type: application/x-www-form-urlencoded' -d 'grant_type=&username=johndoe&password=secret&scope=&client_id=&client_secret='
            ls 
            sudo docker images
