# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Supply chain project CICD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install "fastapi[all]"
        # python -m pip install --upgrade pip
        python -m pip install "uvicorn[standard]"
        # python -m pip install --upgrade pip
        python -m pip install "python-jose[cryptography]"
        python -m pip install "passlib[bcrypt]"
        # python -m pip install --upgrade pip
        python -m pip install elasticsearch
        python -m pip install "elasticsearch[async]"
        # python -m pip install --upgrade pip
        python -m pip install python-dotenv
        python -m pip install pandas
        python -m pip install beautifulsoup4
        python -m pip install numpy
        python -m pip install seaborn
        # python -m pip install --upgrade pip
        python -m pip install -U matplotlib
        python -m pip install -U nltk
        # python -m pip install --upgrade pip
        python -m pip install -U scikit-learn
        python -m pip install textblob
        python -m pip install afinn
        python -m pip install vaderSentiment
        python -m pip install pytest
    - name: Test api
      run: |
        pytest

  build-push-container:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to DockerHub
      uses: docker/login-action@v3 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/supply-chain-project:latest
          
  deploy:
    needs: build-push-container
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME  }}
          username: ${{ secrets.USER_NAME  }}
          key: ${{ secrets.CONTABO_PRIVATE_KEY  }}
          port: 22
          script: |
            docker rm -f supply-chain
            docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/supply-chain-project:latest
            pwd
            ls -l
            cd supply-chain-project
            pwd
            ls -l
            docker compose -f docker-compose-spc.yml up -d
            docker ps 
            docker images
            sleep 10
            curl 'http://localhost:8008/status/db'
